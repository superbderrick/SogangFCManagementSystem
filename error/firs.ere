
CREATE TABLE Customer
(
	CustomerNO            INTEGER  NOT NULL ,
	Name                  CHAR(20)  NOT NULL ,
	Sex                   CHAR(10)  NOT NULL ,
	Age                   INTEGER  NOT NULL ,
	Address               CHAR(20)  NOT NULL ,
	Tel                   INTEGER  NOT NULL ,
	Email                 CHAR(18)  NOT NULL ,
	Birthday              INTEGER  NOT NULL ,
	JoinDate              INTEGER  NOT NULL ,
	ServiceCode           INTEGER  NOT NULL 
)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


CREATE UNIQUE INDEX XPKCustomer ON Customer
(CustomerNO  ASC)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


ALTER TABLE Customer
	ADD CONSTRAINT  XPKCustomer PRIMARY KEY (CustomerNO)

ORA-02260: 테이블에는 하나의 기본 키만 가질 수 있습니다.

Execution Failed!


CREATE TABLE Equipment
(
	Amount                INTEGER  NOT NULL ,
	EquipmentName         CHAR(18)  NOT NULL ,
	EquipmentCode         INTEGER  NOT NULL ,
	ServiceCode           INTEGER  NOT NULL 
)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


CREATE UNIQUE INDEX XPKEquipment ON Equipment
(EquipmentCode  ASC)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


ALTER TABLE Equipment
	ADD CONSTRAINT  XPKEquipment PRIMARY KEY (EquipmentCode)

ORA-02260: 테이블에는 하나의 기본 키만 가질 수 있습니다.

Execution Failed!


CREATE TABLE Management
(
	ManagementCode        INTEGER  NOT NULL ,
	ManagementName        CHAR(20)  NOT NULL 
)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


CREATE UNIQUE INDEX XPKManagement ON Management
(ManagementCode  ASC)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


ALTER TABLE Management
	ADD CONSTRAINT  XPKManagement PRIMARY KEY (ManagementCode)

ORA-02260: 테이블에는 하나의 기본 키만 가질 수 있습니다.

Execution Failed!


CREATE TABLE Player
(
	PlayerNO              INTEGER  NOT NULL ,
	Name                  CHAR(20)  NOT NULL ,
	Nationality           CHAR(20)  NOT NULL ,
	BackNumber            INTEGER  NOT NULL ,
	Position              CHAR(20)  NOT NULL ,
	Height                INTEGER  NOT NULL ,
	Age                   INTEGER  NOT NULL ,
	AnnualSalary          INTEGER  NOT NULL ,
	ServiceCode           INTEGER  NOT NULL 
)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


CREATE UNIQUE INDEX XPKPlayer ON Player
(PlayerNO  ASC)

ORA-00955: 기존의 객체가 이름을 사용하고 있습니다.

Execution Failed!


ALTER TABLE Player
	ADD CONSTRAINT  XPKPlayer PRIMARY KEY (PlayerNO)

ORA-02260: 테이블에는 하나의 기본 키만 가질 수 있습니다.

Execution Failed!


CREATE TABLE PurchaseLog
(
	Date                  CHAR(18)  NOT NULL ,
	PurchaseItemName      CHAR(20)  NOT NULL ,
	SumPrice              INTEGER  NOT NULL ,
	UsedPoint             INTEGER  NOT NULL ,
	SavedPoint            INTEGER  NOT NULL ,
	AvailablePoint        INTEGER  NOT NULL ,
	Detail                CHAR(20)  NOT NULL ,
	CustomerNO            INTEGER  NOT NULL 
)

ORA-00904: : 부적합한 식별자

Execution Failed!


CREATE UNIQUE INDEX XPKPurchaseLog ON PurchaseLog
(CustomerNO  ASC)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE PurchaseLog
	ADD CONSTRAINT  XPKPurchaseLog PRIMARY KEY (CustomerNO)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


CREATE TABLE SogangFC
(
	ServiceCode           INTEGER  NOT NULL ,
	ServiceName           CHAR(20)  NOT NULL 
)

Execution Successful


CREATE UNIQUE INDEX XPKSogangFC ON SogangFC
(ServiceCode  ASC)

Execution Successful


ALTER TABLE SogangFC
	ADD CONSTRAINT  XPKSogangFC PRIMARY KEY (ServiceCode)

Execution Successful


CREATE TABLE Souvenir
(
	Amount                INTEGER  NOT NULL ,
	Price                 INTEGER  NOT NULL ,
	SouvenirName          CHAR(18)  NOT NULL ,
	ServiceCode           INTEGER  NOT NULL ,
	SouvenirNo            CHAR(18)  NOT NULL 
)

Execution Successful


CREATE UNIQUE INDEX XPKSouvenir ON Souvenir
(SouvenirNo  ASC)

Execution Successful


ALTER TABLE Souvenir
	ADD CONSTRAINT  XPKSouvenir PRIMARY KEY (SouvenirNo)

Execution Successful


CREATE TABLE SouvenirProfit
(
	TotalProfit           CHAR(18)  NULL ,
	bySouvenirName        CHAR(18)  NULL ,
	_byUsersProfit        CHAR(18)  NULL ,
	SouvenirNo            CHAR(18)  NOT NULL ,
	ServiceCode           INTEGER  NULL ,
	CustomerNO            INTEGER  NULL 
)

ORA-00911: 문자가 부적합합니다

Execution Failed!


CREATE UNIQUE INDEX XPKSouvenirProfit ON SouvenirProfit
(SouvenirNo  ASC)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE SouvenirProfit
	ADD CONSTRAINT  XPKSouvenirProfit PRIMARY KEY (SouvenirNo)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


CREATE TABLE Step
(
	Name                  CHAR(20)  NOT NULL ,
	Sex                   CHAR(10)  NOT NULL ,
	Age                   INTEGER  NOT NULL ,
	Address               CHAR(20)  NOT NULL ,
	Rank                  CHAR(20)  NOT NULL ,
	AnnualSalary          INTEGER  NOT NULL ,
	Account               INTEGER  NOT NULL ,
	Tel                   INTEGER  NOT NULL ,
	StepNO                INTEGER  NOT NULL  CONSTRAINT  Validation_Rule_StepNO CHECK (StepNO IN (1, 2, 3)),
	ServiceCode           INTEGER  NOT NULL ,
	ManagementCode        INTEGER  NOT NULL 
)

Execution Successful


CREATE UNIQUE INDEX XPKStep ON Step
(StepNO  ASC)

Execution Successful


ALTER TABLE Step
	ADD CONSTRAINT  XPKStep PRIMARY KEY (StepNO)

Execution Successful


CREATE TABLE SupplyCompany
(
	CompanyName           CHAR(18)  NOT NULL ,
	CeoName               CHAR(18)  NOT NULL ,
	Address               CHAR(20)  NOT NULL ,
	Tel                   INTEGER  NOT NULL ,
	Email                 CHAR(18)  NOT NULL ,
	SupplyCompanyNo       INTEGER  NOT NULL ,
	ServiceCode           INTEGER  NOT NULL 
)

Execution Successful


CREATE UNIQUE INDEX XPKSupplyCompany ON SupplyCompany
(SupplyCompanyNo  ASC)

Execution Successful


ALTER TABLE SupplyCompany
	ADD CONSTRAINT  XPKSupplyCompany PRIMARY KEY (SupplyCompanyNo)

Execution Successful


CREATE TABLE SupplyLog
(
	Date                  CHAR(18)  NOT NULL ,
	SupplyItemName        CHAR(18)  NOT NULL ,
	UnitPrice             INTEGER  NOT NULL ,
	ItemNumber            INTEGER  NOT NULL ,
	AmountPayment         INTEGER  NOT NULL ,
	PayDate               DATE  NOT NULL ,
	SupplyCompanyNo       INTEGER  NOT NULL 
)

ORA-00904: : 부적합한 식별자

Execution Failed!


CREATE UNIQUE INDEX XPKSupplyLog ON SupplyLog
(SupplyCompanyNo  ASC)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE SupplyLog
	ADD CONSTRAINT  XPKSupplyLog PRIMARY KEY (SupplyCompanyNo)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE Customer
	ADD (CONSTRAINT  R_32 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE Equipment
	ADD (CONSTRAINT  R_38 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE Player
	ADD (CONSTRAINT  R_31 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE PurchaseLog
	ADD (CONSTRAINT  R_54 FOREIGN KEY (CustomerNO) REFERENCES Customer(CustomerNO))

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE Souvenir
	ADD (CONSTRAINT  R_46 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE Souvenir
	ADD (CONSTRAINT  R_47 FOREIGN KEY (SouvenirNo) REFERENCES SouvenirProfit(SouvenirNo))

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE SouvenirProfit
	ADD (CONSTRAINT  R_44 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE SouvenirProfit
	ADD (CONSTRAINT  R_48 FOREIGN KEY (CustomerNO) REFERENCES Customer(CustomerNO) ON DELETE SET NULL)

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


ALTER TABLE Step
	ADD (CONSTRAINT  R_27 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE Step
	ADD (CONSTRAINT  R_30 FOREIGN KEY (ManagementCode) REFERENCES Management(ManagementCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE SupplyCompany
	ADD (CONSTRAINT  R_41 FOREIGN KEY (ServiceCode) REFERENCES SogangFC(ServiceCode) ON DELETE SET NULL)

Execution Successful


ALTER TABLE SupplyLog
	ADD (CONSTRAINT  R_49 FOREIGN KEY (SupplyCompanyNo) REFERENCES SupplyCompany(SupplyCompanyNo))

ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


CREATE  TRIGGER tI_Customer BEFORE INSERT ON Customer for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on Customer 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Customer on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="000102f7", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Customer"
    P2C_VERB_PHRASE="R/32", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_32", FK_COLUMNS="ServiceCode" */
    UPDATE Customer
      SET
        /* %SetFK(Customer,NULL) */
        Customer.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(Customer,:%New," = "," AND") */
         and Customer.CustomerNO = :new.CustomerNO;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tD_Customer AFTER DELETE ON Customer for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- DELETE trigger on Customer 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* Customer  SouvenirProfit on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0001d5aa", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/48", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_48", FK_COLUMNS="CustomerNO" */
    UPDATE SouvenirProfit
      SET
        /* %SetFK(SouvenirProfit,NULL) */
        SouvenirProfit.CustomerNO = NULL
      WHERE
        /* %JoinFKPK(SouvenirProfit,:%Old," = "," AND") */
        SouvenirProfit.CustomerNO = :old.CustomerNO;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* Customer  PurchaseLog on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="PurchaseLog"
    P2C_VERB_PHRASE="R/54", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_54", FK_COLUMNS="CustomerNO" */
    SELECT count(*) INTO NUMROWS
      FROM PurchaseLog
      WHERE
        /*  %JoinFKPK(PurchaseLog,:%Old," = "," AND") */
        PurchaseLog.CustomerNO = :old.CustomerNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete Customer because PurchaseLog exists.'
      );
    END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_Customer AFTER UPDATE ON Customer for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on Customer 
DECLARE NUMROWS INTEGER;
BEGIN
  /* Customer  SouvenirProfit on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00034975", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/48", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_48", FK_COLUMNS="CustomerNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.CustomerNO <> :new.CustomerNO
  THEN
    UPDATE SouvenirProfit
      SET
        /* %SetFK(SouvenirProfit,NULL) */
        SouvenirProfit.CustomerNO = NULL
      WHERE
        /* %JoinFKPK(SouvenirProfit,:%Old," = ",",") */
        SouvenirProfit.CustomerNO = :old.CustomerNO;
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* Customer  PurchaseLog on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="PurchaseLog"
    P2C_VERB_PHRASE="R/54", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_54", FK_COLUMNS="CustomerNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.CustomerNO <> :new.CustomerNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM PurchaseLog
      WHERE
        /*  %JoinFKPK(PurchaseLog,:%Old," = "," AND") */
        PurchaseLog.CustomerNO = :old.CustomerNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update Customer because PurchaseLog exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  Customer on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Customer"
    P2C_VERB_PHRASE="R/32", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_32", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Customer because SogangFC does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_Equipment BEFORE INSERT ON Equipment for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on Equipment 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Equipment on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00010b38", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Equipment"
    P2C_VERB_PHRASE="R/38", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_38", FK_COLUMNS="ServiceCode" */
    UPDATE Equipment
      SET
        /* %SetFK(Equipment,NULL) */
        Equipment.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(Equipment,:%New," = "," AND") */
         and Equipment.EquipmentCode = :new.EquipmentCode;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_Equipment AFTER UPDATE ON Equipment for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on Equipment 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  Equipment on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00011133", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Equipment"
    P2C_VERB_PHRASE="R/38", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_38", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Equipment because SogangFC does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tD_Management AFTER DELETE ON Management for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- DELETE trigger on Management 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* Management  Step on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000c44e", PARENT_OWNER="", PARENT_TABLE="Management"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/30", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_30", FK_COLUMNS="ManagementCode" */
    UPDATE Step
      SET
        /* %SetFK(Step,NULL) */
        Step.ManagementCode = NULL
      WHERE
        /* %JoinFKPK(Step,:%Old," = "," AND") */
        Step.ManagementCode = :old.ManagementCode;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_Management AFTER UPDATE ON Management for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on Management 
DECLARE NUMROWS INTEGER;
BEGIN
  /* Management  Step on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0000f3d0", PARENT_OWNER="", PARENT_TABLE="Management"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/30", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_30", FK_COLUMNS="ManagementCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ManagementCode <> :new.ManagementCode
  THEN
    UPDATE Step
      SET
        /* %SetFK(Step,NULL) */
        Step.ManagementCode = NULL
      WHERE
        /* %JoinFKPK(Step,:%Old," = ",",") */
        Step.ManagementCode = :old.ManagementCode;
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_Player BEFORE INSERT ON Player for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on Player 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Player on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="0000fdcb", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Player"
    P2C_VERB_PHRASE="R/31", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_31", FK_COLUMNS="ServiceCode" */
    UPDATE Player
      SET
        /* %SetFK(Player,NULL) */
        Player.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(Player,:%New," = "," AND") */
         and Player.PlayerNO = :new.PlayerNO;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_Player AFTER UPDATE ON Player for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on Player 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  Player on child update no action */
  /* ERWIN_RELATION:CHECKSUM="000113ee", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Player"
    P2C_VERB_PHRASE="R/31", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_31", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Player because SogangFC does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_PurchaseLog BEFORE INSERT ON PurchaseLog for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on PurchaseLog 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* Customer  PurchaseLog on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="000107ac", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="PurchaseLog"
    P2C_VERB_PHRASE="R/54", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_54", FK_COLUMNS="CustomerNO" */
    SELECT count(*) INTO NUMROWS
      FROM Customer
      WHERE
        /* %JoinFKPK(:%New,Customer," = "," AND") */
        :new.CustomerNO = Customer.CustomerNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert PurchaseLog because Customer does not exist.'
      );
    END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!

CREATE  TRIGGER tU_PurchaseLog AFTER UPDATE ON PurchaseLog for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on PurchaseLog 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* Customer  PurchaseLog on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0001039a", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="PurchaseLog"
    P2C_VERB_PHRASE="R/54", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_54", FK_COLUMNS="CustomerNO" */
  SELECT count(*) INTO NUMROWS
    FROM Customer
    WHERE
      /* %JoinFKPK(:%New,Customer," = "," AND") */
      :new.CustomerNO = Customer.CustomerNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update PurchaseLog because Customer does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


CREATE  TRIGGER tD_SogangFC AFTER DELETE ON SogangFC for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- DELETE trigger on SogangFC 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Step on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0005ea28", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/27", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_27", FK_COLUMNS="ServiceCode" */
    UPDATE Step
      SET
        /* %SetFK(Step,NULL) */
        Step.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Step,:%Old," = "," AND") */
        Step.ServiceCode = :old.ServiceCode;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Player on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Player"
    P2C_VERB_PHRASE="R/31", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_31", FK_COLUMNS="ServiceCode" */
    UPDATE Player
      SET
        /* %SetFK(Player,NULL) */
        Player.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Player,:%Old," = "," AND") */
        Player.ServiceCode = :old.ServiceCode;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Customer on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Customer"
    P2C_VERB_PHRASE="R/32", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_32", FK_COLUMNS="ServiceCode" */
    UPDATE Customer
      SET
        /* %SetFK(Customer,NULL) */
        Customer.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Customer,:%Old," = "," AND") */
        Customer.ServiceCode = :old.ServiceCode;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Equipment on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Equipment"
    P2C_VERB_PHRASE="R/38", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_38", FK_COLUMNS="ServiceCode" */
    UPDATE Equipment
      SET
        /* %SetFK(Equipment,NULL) */
        Equipment.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Equipment,:%Old," = "," AND") */
        Equipment.ServiceCode = :old.ServiceCode;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  SupplyCompany on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SupplyCompany"
    P2C_VERB_PHRASE="R/41", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_41", FK_COLUMNS="ServiceCode" */
    UPDATE SupplyCompany
      SET
        /* %SetFK(SupplyCompany,NULL) */
        SupplyCompany.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(SupplyCompany,:%Old," = "," AND") */
        SupplyCompany.ServiceCode = :old.ServiceCode;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  SouvenirProfit on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/44", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_44", FK_COLUMNS="ServiceCode" */
    UPDATE SouvenirProfit
      SET
        /* %SetFK(SouvenirProfit,NULL) */
        SouvenirProfit.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(SouvenirProfit,:%Old," = "," AND") */
        SouvenirProfit.ServiceCode = :old.ServiceCode;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Souvenir on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/46", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_46", FK_COLUMNS="ServiceCode" */
    UPDATE Souvenir
      SET
        /* %SetFK(Souvenir,NULL) */
        Souvenir.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Souvenir,:%Old," = "," AND") */
        Souvenir.ServiceCode = :old.ServiceCode;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_SogangFC AFTER UPDATE ON SogangFC for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on SogangFC 
DECLARE NUMROWS INTEGER;
BEGIN
  /* SogangFC  Step on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00068a27", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/27", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_27", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE Step
      SET
        /* %SetFK(Step,NULL) */
        Step.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Step,:%Old," = ",",") */
        Step.ServiceCode = :old.ServiceCode;
  END IF;

  /* SogangFC  Player on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Player"
    P2C_VERB_PHRASE="R/31", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_31", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE Player
      SET
        /* %SetFK(Player,NULL) */
        Player.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Player,:%Old," = ",",") */
        Player.ServiceCode = :old.ServiceCode;
  END IF;

  /* SogangFC  Customer on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Customer"
    P2C_VERB_PHRASE="R/32", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_32", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE Customer
      SET
        /* %SetFK(Customer,NULL) */
        Customer.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Customer,:%Old," = ",",") */
        Customer.ServiceCode = :old.ServiceCode;
  END IF;

  /* SogangFC  Equipment on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Equipment"
    P2C_VERB_PHRASE="R/38", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_38", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE Equipment
      SET
        /* %SetFK(Equipment,NULL) */
        Equipment.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Equipment,:%Old," = ",",") */
        Equipment.ServiceCode = :old.ServiceCode;
  END IF;

  /* SogangFC  SupplyCompany on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SupplyCompany"
    P2C_VERB_PHRASE="R/41", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_41", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE SupplyCompany
      SET
        /* %SetFK(SupplyCompany,NULL) */
        SupplyCompany.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(SupplyCompany,:%Old," = ",",") */
        SupplyCompany.ServiceCode = :old.ServiceCode;
  END IF;

  /* SogangFC  SouvenirProfit on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/44", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_44", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE SouvenirProfit
      SET
        /* %SetFK(SouvenirProfit,NULL) */
        SouvenirProfit.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(SouvenirProfit,:%Old," = ",",") */
        SouvenirProfit.ServiceCode = :old.ServiceCode;
  END IF;

  /* SogangFC  Souvenir on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/46", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_46", FK_COLUMNS="ServiceCode" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.ServiceCode <> :new.ServiceCode
  THEN
    UPDATE Souvenir
      SET
        /* %SetFK(Souvenir,NULL) */
        Souvenir.ServiceCode = NULL
      WHERE
        /* %JoinFKPK(Souvenir,:%Old," = ",",") */
        Souvenir.ServiceCode = :old.ServiceCode;
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_Souvenir BEFORE INSERT ON Souvenir for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on Souvenir 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Souvenir on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="000226c4", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/46", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_46", FK_COLUMNS="ServiceCode" */
    UPDATE Souvenir
      SET
        /* %SetFK(Souvenir,NULL) */
        Souvenir.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(Souvenir,:%New," = "," AND") */
         and Souvenir.SouvenirNo = :new.SouvenirNo;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SouvenirProfit  Souvenir on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SouvenirProfit"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/47", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_47", FK_COLUMNS="SouvenirNo" */
    SELECT count(*) INTO NUMROWS
      FROM SouvenirProfit
      WHERE
        /* %JoinFKPK(:%New,SouvenirProfit," = "," AND") */
        :new.SouvenirNo = SouvenirProfit.SouvenirNo;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert Souvenir because SouvenirProfit does not exist.'
      );
    END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_Souvenir AFTER UPDATE ON Souvenir for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on Souvenir 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  Souvenir on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00023cd5", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/46", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_46", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Souvenir because SogangFC does not exist.'
    );
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SouvenirProfit  Souvenir on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SouvenirProfit"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/47", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_47", FK_COLUMNS="SouvenirNo" */
  SELECT count(*) INTO NUMROWS
    FROM SouvenirProfit
    WHERE
      /* %JoinFKPK(:%New,SouvenirProfit," = "," AND") */
      :new.SouvenirNo = SouvenirProfit.SouvenirNo;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Souvenir because SouvenirProfit does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_SouvenirProfit BEFORE INSERT ON SouvenirProfit for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on SouvenirProfit 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  SouvenirProfit on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00023be7", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/44", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_44", FK_COLUMNS="ServiceCode" */
    UPDATE SouvenirProfit
      SET
        /* %SetFK(SouvenirProfit,NULL) */
        SouvenirProfit.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(SouvenirProfit,:%New," = "," AND") */
         and SouvenirProfit.SouvenirNo = :new.SouvenirNo;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* Customer  SouvenirProfit on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/48", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_48", FK_COLUMNS="CustomerNO" */
    UPDATE SouvenirProfit
      SET
        /* %SetFK(SouvenirProfit,NULL) */
        SouvenirProfit.CustomerNO = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM Customer
            WHERE
              /* %JoinFKPK(:%New,Customer," = "," AND") */
              :new.CustomerNO = Customer.CustomerNO
        ) 
        /* %JoinPKPK(SouvenirProfit,:%New," = "," AND") */
         and SouvenirProfit.SouvenirNo = :new.SouvenirNo;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!

CREATE  TRIGGER tD_SouvenirProfit AFTER DELETE ON SouvenirProfit for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- DELETE trigger on SouvenirProfit 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SouvenirProfit  Souvenir on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="0000fa46", PARENT_OWNER="", PARENT_TABLE="SouvenirProfit"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/47", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_47", FK_COLUMNS="SouvenirNo" */
    SELECT count(*) INTO NUMROWS
      FROM Souvenir
      WHERE
        /*  %JoinFKPK(Souvenir,:%Old," = "," AND") */
        Souvenir.SouvenirNo = :old.SouvenirNo;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete SouvenirProfit because Souvenir exists.'
      );
    END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!

CREATE  TRIGGER tU_SouvenirProfit AFTER UPDATE ON SouvenirProfit for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on SouvenirProfit 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SouvenirProfit  Souvenir on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0003702f", PARENT_OWNER="", PARENT_TABLE="SouvenirProfit"
    CHILD_OWNER="", CHILD_TABLE="Souvenir"
    P2C_VERB_PHRASE="R/47", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_47", FK_COLUMNS="SouvenirNo" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.SouvenirNo <> :new.SouvenirNo
  THEN
    SELECT count(*) INTO NUMROWS
      FROM Souvenir
      WHERE
        /*  %JoinFKPK(Souvenir,:%Old," = "," AND") */
        Souvenir.SouvenirNo = :old.SouvenirNo;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update SouvenirProfit because Souvenir exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  SouvenirProfit on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/44", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_44", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update SouvenirProfit because SogangFC does not exist.'
    );
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* Customer  SouvenirProfit on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="Customer"
    CHILD_OWNER="", CHILD_TABLE="SouvenirProfit"
    P2C_VERB_PHRASE="R/48", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_48", FK_COLUMNS="CustomerNO" */
  SELECT count(*) INTO NUMROWS
    FROM Customer
    WHERE
      /* %JoinFKPK(:%New,Customer," = "," AND") */
      :new.CustomerNO = Customer.CustomerNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.CustomerNO IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update SouvenirProfit because Customer does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!


CREATE  TRIGGER tI_Step BEFORE INSERT ON Step for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on Step 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  Step on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="0001f298", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/27", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_27", FK_COLUMNS="ServiceCode" */
    UPDATE Step
      SET
        /* %SetFK(Step,NULL) */
        Step.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(Step,:%New," = "," AND") */
         and Step.StepNO = :new.StepNO;

    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* Management  Step on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="Management"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/30", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_30", FK_COLUMNS="ManagementCode" */
    UPDATE Step
      SET
        /* %SetFK(Step,NULL) */
        Step.ManagementCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM Management
            WHERE
              /* %JoinFKPK(:%New,Management," = "," AND") */
              :new.ManagementCode = Management.ManagementCode
        ) 
        /* %JoinPKPK(Step,:%New," = "," AND") */
         and Step.StepNO = :new.StepNO;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_Step AFTER UPDATE ON Step for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on Step 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  Step on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00022b4c", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/27", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_27", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Step because SogangFC does not exist.'
    );
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* Management  Step on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="Management"
    CHILD_OWNER="", CHILD_TABLE="Step"
    P2C_VERB_PHRASE="R/30", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_30", FK_COLUMNS="ManagementCode" */
  SELECT count(*) INTO NUMROWS
    FROM Management
    WHERE
      /* %JoinFKPK(:%New,Management," = "," AND") */
      :new.ManagementCode = Management.ManagementCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ManagementCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update Step because Management does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_SupplyCompany BEFORE INSERT ON SupplyCompany for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on SupplyCompany 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SogangFC  SupplyCompany on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="000119fe", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SupplyCompany"
    P2C_VERB_PHRASE="R/41", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_41", FK_COLUMNS="ServiceCode" */
    UPDATE SupplyCompany
      SET
        /* %SetFK(SupplyCompany,NULL) */
        SupplyCompany.ServiceCode = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM SogangFC
            WHERE
              /* %JoinFKPK(:%New,SogangFC," = "," AND") */
              :new.ServiceCode = SogangFC.ServiceCode
        ) 
        /* %JoinPKPK(SupplyCompany,:%New," = "," AND") */
         and SupplyCompany.SupplyCompanyNo = :new.SupplyCompanyNo;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tD_SupplyCompany AFTER DELETE ON SupplyCompany for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- DELETE trigger on SupplyCompany 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SupplyCompany  SupplyLog on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="0000f7a6", PARENT_OWNER="", PARENT_TABLE="SupplyCompany"
    CHILD_OWNER="", CHILD_TABLE="SupplyLog"
    P2C_VERB_PHRASE="R/49", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_49", FK_COLUMNS="SupplyCompanyNo" */
    SELECT count(*) INTO NUMROWS
      FROM SupplyLog
      WHERE
        /*  %JoinFKPK(SupplyLog,:%Old," = "," AND") */
        SupplyLog.SupplyCompanyNo = :old.SupplyCompanyNo;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete SupplyCompany because SupplyLog exists.'
      );
    END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful

CREATE  TRIGGER tU_SupplyCompany AFTER UPDATE ON SupplyCompany for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on SupplyCompany 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SupplyCompany  SupplyLog on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00024d11", PARENT_OWNER="", PARENT_TABLE="SupplyCompany"
    CHILD_OWNER="", CHILD_TABLE="SupplyLog"
    P2C_VERB_PHRASE="R/49", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_49", FK_COLUMNS="SupplyCompanyNo" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.SupplyCompanyNo <> :new.SupplyCompanyNo
  THEN
    SELECT count(*) INTO NUMROWS
      FROM SupplyLog
      WHERE
        /*  %JoinFKPK(SupplyLog,:%Old," = "," AND") */
        SupplyLog.SupplyCompanyNo = :old.SupplyCompanyNo;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update SupplyCompany because SupplyLog exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SogangFC  SupplyCompany on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="SogangFC"
    CHILD_OWNER="", CHILD_TABLE="SupplyCompany"
    P2C_VERB_PHRASE="R/41", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_41", FK_COLUMNS="ServiceCode" */
  SELECT count(*) INTO NUMROWS
    FROM SogangFC
    WHERE
      /* %JoinFKPK(:%New,SogangFC," = "," AND") */
      :new.ServiceCode = SogangFC.ServiceCode;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.ServiceCode IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update SupplyCompany because SogangFC does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


Execution Successful


CREATE  TRIGGER tI_SupplyLog BEFORE INSERT ON SupplyLog for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- INSERT trigger on SupplyLog 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
    /* SupplyCompany  SupplyLog on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00011242", PARENT_OWNER="", PARENT_TABLE="SupplyCompany"
    CHILD_OWNER="", CHILD_TABLE="SupplyLog"
    P2C_VERB_PHRASE="R/49", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_49", FK_COLUMNS="SupplyCompanyNo" */
    SELECT count(*) INTO NUMROWS
      FROM SupplyCompany
      WHERE
        /* %JoinFKPK(:%New,SupplyCompany," = "," AND") */
        :new.SupplyCompanyNo = SupplyCompany.SupplyCompanyNo;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert SupplyLog because SupplyCompany does not exist.'
      );
    END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!

CREATE  TRIGGER tU_SupplyLog AFTER UPDATE ON SupplyLog for each row
-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
-- UPDATE trigger on SupplyLog 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51 */
  /* SupplyCompany  SupplyLog on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00011659", PARENT_OWNER="", PARENT_TABLE="SupplyCompany"
    CHILD_OWNER="", CHILD_TABLE="SupplyLog"
    P2C_VERB_PHRASE="R/49", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_49", FK_COLUMNS="SupplyCompanyNo" */
  SELECT count(*) INTO NUMROWS
    FROM SupplyCompany
    WHERE
      /* %JoinFKPK(:%New,SupplyCompany," = "," AND") */
      :new.SupplyCompanyNo = SupplyCompany.SupplyCompanyNo;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update SupplyLog because SupplyCompany does not exist.'
    );
  END IF;


-- ERwin Builtin 2017년 5월 20일 토요일 오전 1:09:51
END;


ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

Execution Failed!

Schema Generation Complete
37 queries succeeded.  33 queries failed.  
